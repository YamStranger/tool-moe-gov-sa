apply plugin: 'java'
version = '1.0'
libsDirName = 'lib'
sourceCompatibility = 1.7
targetCompatibility = 1.7

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceSets {
    integTest {
        java.srcDir file('src/integTest/java')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.runtimeClasspath
        runtimeClasspath = output + compileClasspath
    }
}

task intTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath += sourceSets.integTest.runtimeClasspath
}



/*
//for download git
apply plugin: 'git-dependencies'
*/
project.ext{
	/*
    //for download git
	project.gitDependenciesDir=new File(project.projectDir.path,'git-dependencies')
	*/
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
		/*
		//for download git
        classpath 'org.batcha.gradle.plugins:git-dependencies:0.1'
		*/
    }
}

repositories {
        mavenCentral()
}
	
dependencies {
  /*
  for download git
  compile('jcabi-github:jcabi-github:1.0').ext.git = 'https://github.com/YamStranger/jcabi-github.git'
  */
   compile('org.testng:testng:6.8.21:sources')
   compile('org.testng:testng:6.8.21')
   compile('org.mockito:mockito-core:2.0.5-beta')
   compile('org.mockito:mockito-core:2.0.5-beta:sources')
   compile('ch.qos.logback:logback-classic:1.1.3:sources')
   compile('ch.qos.logback:logback-classic:1.1.3')
   compile('ch.qos.logback:logback-classic:1.1.3')
//   compile('com.opencsv:opencsv:3.3:sources')
//   compile('com.opencsv:opencsv:3.3')
//   compile('org.apache.poi:poi:3.12-beta1')   
//   compile('org.apache.poi:poi-ooxml:3.12-beta1')   
//   compile('org.apache.poi:poi-ooxml-schemas:3.12-beta1')
   compile('org.seleniumhq.selenium:selenium-java:2.45.0')
   
   
  
  //compile fileTree(dir: project.projectDir.path.concat('git-dependencies/jcabi-github/target'), includes: ['*.jar'])
}

test {
    useTestNG {
        excludeGroups 'integrationTests'
        //includeGroups 'unitTests'
    }
}
	
task copyDeps(type: Copy) {
  from configurations.runtime
  into project.projectDir.path+'/lib'
}

compileJava {
	dependsOn ('copyDeps','create-dirs')
}

jar {
    manifest {
        attributes 'Implementation-Title': 'tool-moe-gov-sa',
                   'Implementation-Version': version,
				   'Main-Class': 'com.scraping.moe.gov.sa.Main'
				    //attributes(
					//    'Class-Path': configurations.compile.collect { it.getName() }.join(' '))
    }
}


//create a single Jar with all dependencies
task buildAllInOne(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Unique Identification Numbers',
        	'Implementation-Version': version,
        	'Main-Class': 'com.scraping.moe.gov.sa.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

